# ========== shared upstreams ==========
upstream backend  { server backend:8000; }
upstream frontend { server frontend:3000; }
# ========== default “deny-all-unknown-host” ==========
server {
    listen 80  default_server;
    listen 443 ssl default_server;
    server_name _;

    ssl_certificate     /etc/nginx/certs/cf-origin.pem;
    ssl_certificate_key /etc/nginx/certs/cf-origin-key.pem;

    return 444;
}

# ========== HTTPS for aut-ssc.ir ==========
server {
    listen 443 ssl;
    server_name aut-ssc.ir;

    # --- TLS ---
    ssl_certificate     /etc/nginx/certs/cf-origin.pem;
    ssl_certificate_key /etc/nginx/certs/cf-origin-key.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers  off;

    # --- HSTS (2 years, preload-ready) ---
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

    # ---------- routes ----------
    location /api/token/      { limit_req zone=login_zone; proxy_pass http://backend; include proxy_headers; }
    location /api/token/refresh/ { limit_req zone=login_zone; proxy_pass http://backend; include proxy_headers; }
    location /api/register/   { limit_req zone=login_zone; proxy_pass http://backend; include proxy_headers; }

    location /api/            { proxy_pass http://backend; include proxy_headers; }
    location /admin/          { proxy_pass http://backend; include proxy_headers; }

    location /static/         { alias /assets/static/;  }
    location /media/          { alias /assets/media/;   }

    # everything else → Next.js
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        include proxy_headers;
    }
}

# ========== HTTP → HTTPS redirect ==========
server {
    listen 80;
    server_name aut-ssc.ir;
    return 301 https://$host$request_uri;
}

# ========== reusable header snippet ==========
# (Put this at END of file; nginx will read it)
map $http_x_forwarded_proto $https_forwarded {
    default "";
    https "on";
}
# common headers macro
macro proxy_headers {
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

